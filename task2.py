"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def my_rec(my_num, count_even=0, count_odd=0):
    if my_num == 0:
        return f'Количество четных чисел = {count_even}\nКоличество не четных чисел = {count_odd}'
    else:
        if not my_num % 2 == 0:
            count_odd += 1
        else:
            count_even += 1
    return my_rec(my_num // 10, count_even, count_odd)


if __name__ == '__main__':
    try:
        num = int(input('Введите число: '))
        print(my_rec(num))
    except ValueError:
        print('Введено не число')
